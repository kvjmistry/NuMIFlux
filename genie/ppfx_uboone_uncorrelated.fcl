#include "services_microboone.fcl"
#include "ppfx_numi_reweight.fcl"

process_name: PPFX

services: {
  scheduler: { defaultExceptions: false }
  TFileService: { fileName: "genie_hist.root" }
  TimeTracker: {}
  MemoryTracker: {}
  RandomNumberGenerator: {}
  @table::microboone_gen_services
  FileCatalogMetadata: @local::art_file_catalog_mc
}

source: {
  module_type: RootInput
  maxEvents: -1
}

physics: {
  producers: {
    eventweight: @local::reweight_numi_ppfx
    rns: { module_type: "RandomNumberSaver" }
  }
  simulate: [ rns, eventweight ]
  stream1:  [ out1 ]
  trigger_paths: [simulate] 
  end_paths:     [stream1]  
}

outputs: {
  out1: {
    module_type: RootOutput
    fileName: "%ifb_EW.root"
    dataTier: "generated"
    compressionLevel: 1
  }
}


# ppfx_cv is for a cv correction
# ppfx_master == ppfx_ms returns a total weight
physics.producers.eventweight.genie_module_label: "generator" 
physics.producers.eventweight.weight_functions: [ppfx_cv, ppfx_mipppi, ppfx_mippk, ppfx_thinmes, ppfx_thinpi, ppfx_other, ppfx_thinnpi, ppfx_totabs, ppfx_targatt, ppfx_thinna, ppfx_think, ppfx_thinn]
# physics.producers.eventweight.weight_functions: [ppfx_cv, ppfx_master]

# Select input type generator == GENIE file, flux == raw dk2nu for flux reader module
physics.producers.eventweight.ppfx_cv.input_labels:      ["generator"]
physics.producers.eventweight.ppfx_master.input_labels:  ["generator"]
physics.producers.eventweight.ppfx_mipppi.input_labels:  ["generator"]
physics.producers.eventweight.ppfx_mippk.input_labels:   ["generator"]
physics.producers.eventweight.ppfx_thinmes.input_labels: ["generator"]
physics.producers.eventweight.ppfx_thinpi.input_labels:  ["generator"]
physics.producers.eventweight.ppfx_other.input_labels:   ["generator"]
physics.producers.eventweight.ppfx_thinpi.input_labels:  ["generator"]
physics.producers.eventweight.ppfx_totabs.input_labels:  ["generator"]
physics.producers.eventweight.ppfx_targatt.input_labels: ["generator"]
physics.producers.eventweight.ppfx_thnna.input_labels:   ["generator"]
physics.producers.eventweight.ppfx_think.input_labels:   ["generator"]
physics.producers.eventweight.ppfx_thinn.input_labels:   ["generator"]
physics.producers.eventweight.ppfx_ms.input_labels:      ["generator"]

physics.producers.eventweight.ppfx_cv.verbose:       0
physics.producers.eventweight.ppfx_ms.verbose:       0
physics.producers.eventweight.ppfx_mipppi.verbose:   0
physics.producers.eventweight.ppfx_mippk.verbose:    0
physics.producers.eventweight.ppfx_thinmes.verbose:  0
physics.producers.eventweight.ppfx_thinpi.verbose:   0
physics.producers.eventweight.ppfx_other.verbose:    0
physics.producers.eventweight.ppfx_thinnpi.verbose:  0
physics.producers.eventweight.ppfx_totabs.verbose:   0
physics.producers.eventweight.ppfx_targatt.verbose:  0
physics.producers.eventweight.ppfx_thinna.verbose:   0
physics.producers.eventweight.ppfx_think.verbose:    0
physics.producers.eventweight.ppfx_thinn.verbose:    0

# Adjust the window/offset for the reduced total frame size (9600 -> 6400 ticks)
services.DetectorPropertiesService.NumberTimeSamples: 9600
services.DetectorPropertiesService.ReadOutWindowSize: 9600
services.DetectorClocksService.InheritClockConfig:    false
services.DetectorClocksService.TriggerOffsetTPC:      -1600

